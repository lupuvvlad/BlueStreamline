//Last update: 2014.11.28;
//To use the interrupts you should include the ATMEL library 
//To used this file, please include in the project the BitOperations.h file;

#include <avr/interrupt.h>

//Generals;

#define ENABLE_GLOBAL_INTERRUPTS sei()
#define DISABLE_GLOBAL_INTERRUPTS cli()
/*
//For ATMEGA48;
//PCICR - Pin Change Interrupt Control Register;
#define ENABLE_PIN_CHANGE_INTERRUPT_0 B1(PCICR,PCIE0)//PCIE0 - Pin Change Interrupt Enable 0;
#define DISABLE_PIN_CHANGE_INTERRUPT_0 B0(PCICR,PCIE0)
//PCICR - Pin Change Interrupt Control Register;
#define ENABLE_PIN_CHANGE_INTERRUPT_1 B1(PCICR,PCIE1)//PCIE1 - Pin Change Interrupt Enable 1;
#define DISABLE_PIN_CHANGE_INTERRUPT_1 B0(PCICR,PCIE1)
//PCMSK0 - Pin Change Mask Register 0;
#define ENABLE_INTERRUPT_PCINT0 B1(PCMSK0,PCINT0)//PCINT0 - Pin Change Interrupt 0;
#define DISABLE_INTERRUPT_PCINT0 B0(PCMSK0,PCINT0)
//PCMSK1 - Pin Change Mask Register 1;
#define ENABLE_INTERRUPT_PCINT12 B1(PCMSK1,PCINT12)//PCINT12 - Pin Change Interrupt 12;
#define DISABLE_INTERRUPT_PCINT12 B0(PCMSK1,PCINT12)
*/
/*
//ATTINY24;
#define PIN_CHANGE_INTERRUPT_ENABLE B1(GIMSK,PCIE)//PCIE - Pin Change Interrupt Enable
//GIMSK – General Interrupt Mask Register;
#define ENABLE_PIN_CHANGE_INTERRUPT_0 B1(GIMSK,PCIE0)//PCIE0 - Pin Change Interrupt Enable 0;
#define DISABLE_PIN_CHANGE_INTERRUPT_0 B0(GIMSK,PCIE0)
#define ENABLE_PIN_CHANGE_INTERRUPT_1 B1(GIMSK,PCIE1)//PCIE1 - Pin Change Interrupt Enable 0;
#define DISABLE_PIN_CHANGE_INTERRUPT_1 B0(GIMSK,PCIE1)
//PCMSK1 - Pin Change Mask Register 1;
#define ENABLE_INTERRUPT_PCINT8 B1(PCMSK1,PCINT8)//PCINT8 - Pin Change Interrupt 8;
#define DISABLE_INTERRUPT_PCINT8 B0(PCMSK1,PCINT8)
#define ENABLE_INTERRUPT_PCINT9 B1(PCMSK1,PCINT9)//PCINT9 - Pin Change Interrupt 9;
#define DISABLE_INTERRUPT_PCINT9 B0(PCMSK1,PCINT9)
//GIFR – General Interrupt Flag Register;
#define GENERAL_INTERRUPT_FLAG_INTF0 B1(GIFR,INTF0)//INTF0: External Interrupt Flag 0
#define GENERAL_INTERRUPT_FLAG_PCIF1 B1(GIFR,PCIF1)//PCIF1: Pin Change Interrupt Flag 1
#define GENERAL_INTERRUPT_FLAG_PCIF0 B1(GIFR,PCIF0)//PCIF0: Pin Change Interrupt Flag 0
//INTERRUPT_SENSE_CONTROL
#define INT0_INTERRUPT_ENABLE B1(GIMSK,INT0)//INT0 - External Interrupt Request 0 Enable
#define INT0_ON_LOW_LEVEL B0(MCUCR,ISC01); B0(MCUCR,ISC00)//MCUCR - MCU Control Register;
#define INT0_ON_ANY_LOGICAL_CHANGE B0(MCUCR,ISC01); B1(MCUCR,ISC00)//ISCx - Interrupt Sense Control;
#define INT0_ON_FALLING_EDGE B1(MCUCR,ISC01); B0(MCUCR,ISC00)
#define INT0_ON_RISING_EDGE B1(MCUCR,ISC01); B1(MCUCR,ISC00)

//Timer0 Interrupts for ATMEGA48/ATTINY24/ATTINY13;
#define TIMER0_OVERFLOW_INTERRUPT_ENABLE B1(TIMSK0,TOIE0)
#define TIMER0_OVERFLOW_INTERRUPT_DISABLE B0(TIMSK0,TOIE0)
#define TIMER0_OVERFLOW_INTERRUPT_OCIE0A_ENABLE B1(TIMSK0,OCIE0A)
#define TIMER0_OVERFLOW_INTERRUPT_OCIE0A_DISABLE B0(TIMSK0,OCIE0A)
#define TIMER0_OVERFLOW_INTERRUPT_OCIE0B_ENABLE B1(TIMSK0,OCIE0B)
#define TIMER0_OVERFLOW_INTERRUPT_OCIE0B_DISABLE B0(TIMSK0,OCIE0B)
#define TIMER0_OVERFLOW_FLAG_CLEAR B1(TIFR0,TOV0)
*/
/*
//ATMEGA8;
//Timer0 Interrupts for ATMEGA8;
#define TIMER0_OVERFLOW_INTERRUPT_ENABLE B1(TIMSK,TOIE0)
#define TIMER0_OVERFLOW_INTERRUPT_DISABLE B0(TIMSK,TOIE0)

#define TIMER1_OVERFLOW_INTERRUPT_ENABLE B1(TIMSK,TOIE1)
#define TIMER1_OVERFLOW_INTERRUPT_DISABLE B0(TIMSK,TOIE1)
#define TIMER1_INPUT_CAPTURE_INTERRUPT_ENABLE B1(TIMSK,TICIE1)
#define TIMER1_INPUT_CAPTURE_INTERRUPT_DISABLE B1(TIMSK,TICIE1)
#define TIMER1_INPUT_CAPTURE_FLAG_ENABLE B1(TIMSK,ICF1)
#define TIMER1_INPUT_CAPTURE_FLAG_DISABLE B1(TIMSK,ICF1)
#define TIMER1_OUTPUT_COMPARE_A_ENABLE B1(TIMSK,OCIE1A)
#define TIMER1_OUTPUT_COMPARE_A_DISABLE B0(TIMSK,OCIE1A)
#define TIMER1_OUTPUT_COMPARE_A_FLAG_ENABLE B1(TIMSK,OCF1A)
#define TIMER1_OUTPUT_COMPARE_A_FLAG_DISABLE B0(TIMSK,OCF1A)
#define TIMER1_OUTPUT_COMPARE_B_ENABLE B1(TIMSK,OCIE1B)
#define TIMER1_OUTPUT_COMPARE_B_DISABLE B0(TIMSK,OCIE1B)
#define TIMER1_OUTPUT_COMPARE_B_FLAG_ENABLE B1(TIMSK,OCF1B)
#define TIMER1_OUTPUT_COMPARE_B_FLAG_DISABLE B0(TIMSK,OCF1B)
#define TIMER1_OVERFLOW_FLAG_CLEAR B1(TIFR,TOV1)

#define TIMER2_OVERFLOW_INTERRUPT_ENABLE B1(TIMSK,TOIE2)
#define TIMER2_OVERFLOW_INTERRUPT_DISABLE B0(TIMSK,TOIE2)
#define TIMER2_OUTPUT_COMPARE_ENABLE B1(TIMSK,OCIE2)
#define TIMER2_OUTPUT_COMPARE_DISABLE B0(TIMSK,OCIE2)

#define INT0_INTERRUPT_ENABLE B1(GICR,INT0)//GICR - General Interrupt Control Register
#define INT0_INTERRUPT_DISABLE B0(GICR,INT0)
#define INT0_ON_LOW_LEVEL B0(MCUCR,ISC01); B0(MCUCR,ISC00)//MCUCR - MCU Control Register; ISCx - Interrupt Sense Control;
#define INT0_ON_ANY_LOGICAL_CHANGE B0(MCUCR,ISC01); B1(MCUCR,ISC00)
#define INT0_ON_FALLING_EDGE B1(MCUCR,ISC01); B0(MCUCR,ISC00)
#define INT0_ON_RISING_EDGE B1(MCUCR,ISC01); B1(MCUCR,ISC00)

#define INT1_INTERRUPT_ENABLE B1(GICR,INT1)//GICR - General Interrupt Control Register
#define INT1_ON_LOW_LEVEL B0(MCUCR,ISC11); B0(MCUCR,ISC10)//MCUCR - MCU Control Register; ISCx - Interrupt Sense Control;
#define INT1_ON_ANY_LOGICAL_CHANGE B0(MCUCR,ISC11); B1(MCUCR,ISC10)
#define INT1_ON_FALLING_EDGE B1(MCUCR,ISC11); B0(MCUCR,ISC10)
#define INT1_ON_RISING_EDGE B1(MCUCR,ISC11); B1(MCUCR,ISC10)
*/
/*
//ATTINY88_Interrupts;
#define TIMER0_OVERFLOW_INTERRUPT_ENABLE B1(TIMSK0,TOIE0)
#define TIMER0_OVERFLOW_INTERRUPT_DISABLE B0(TIMSK0,TOIE0)
#define TIMER0_OCR0A INTERRUPT_ENABLE B1(TIMSK0,OCIE0A)
#define TIMER0_OCR0A INTERRUPT_DISABLE B0(TIMSK0,OCIE0A)
#define TIMER0_OCR0B INTERRUPT_ENABLE B1(TIMSK0,OCIE0B)
#define TIMER0_OCR0B INTERRUPT_DISABLE B0(TIMSK0,OCIE0B)

#define ENABLE_PIN_CHANGE_INTERRUPT_0_7 B1(PCICR,PCIE0);
#define ENABLE_PIN_CHANGE_INTERRUPT_8_15 B1(PCICR,PCIE1);
#define ENABLE_PIN_CHANGE_INTERRUPT_16_23 B1(PCICR,PCIE2);
#define ENABLE_PIN_CHANGE_INTERRUPT_24_27 B1(PCICR,PCIE3);

#define ENABLE_PIN_CHANGE_INTERRUPT_27 B1(PCMSK3,27);
#define ENABLE_PIN_CHANGE_INTERRUPT_26 B1(PCMSK3,26);
#define ENABLE_PIN_CHANGE_INTERRUPT_25 B1(PCMSK3,25);
#define ENABLE_PIN_CHANGE_INTERRUPT_24 B1(PCMSK3,24);

#define ENABLE_PIN_CHANGE_INTERRUPT_8 B1(PCMSK2,8);
#define ENABLE_PIN_CHANGE_INTERRUPT_9 B1(PCMSK2,9);
#define ENABLE_PIN_CHANGE_INTERRUPT_10 B1(PCMSK2,10);
#define ENABLE_PIN_CHANGE_INTERRUPT_11 B1(PCMSK2,11);
#define ENABLE_PIN_CHANGE_INTERRUPT_12 B1(PCMSK2,12);
#define ENABLE_PIN_CHANGE_INTERRUPT_13 B1(PCMSK2,13);
#define ENABLE_PIN_CHANGE_INTERRUPT_14 B1(PCMSK2,14);
#define ENABLE_PIN_CHANGE_INTERRUPT_15 B1(PCMSK2,15);
*/
//INTERRUPT Enable Vectors for ATMEGA8;
//ISR(INT0_vect){}
//ISR(INT1_vect){}
//ISR(TIMER0_OVF_vect){}
//ISR(TIMER1_OVF_vect){}
//ISR(TIMER1_CAPT_vect){}
//ISR(TIMER1_COMPA_vect){}
//ISR(TIMER1_COMPB_vect){}
//ISR(TIMER2_OVF_vect){}
//ISR(TIMER2_COMP_vect){}
//ISR(TIMER0_COMPA_vect){}
//ISR(SPI_STC_vect){}
//ISR(USART_RXC_vect){}
//ISR(USART_UDRE_vect){}
//ISR(USART_TXC_vect){}
//ISR(ADC_vect){}
//ISR(EE_RDY_vect){}
//ISR(ANA_COMP_vect){}
//ISR(TWI_vect){}
//ISR(SPM_RDY_vect){}

//INTERRUPT Enable Vectors for ATMEGA48;
//ISR(TIMER0_OVF_vect){}
//ISR(TIMER1_OVF_vect){}
//ISR(TIMER2_OVF_vect){}
//ISR(TIMER0_COMPA_vect){}

//INTERRUPT Enable Vectors for ATTINY24;
//ISR(TIM0_OVF_vect){}
//ISR(TIM0_COMPA_vect){}
//ISR(TIM0_COMPB_vect){}
//ISR(PCINT0_vect){}
//ISR(PCINT1_vect){}
